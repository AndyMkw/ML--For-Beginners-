{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled3.ipynb",
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "metadata": {
        "id": "S8kryK7XUvDB",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 338
        },
        "outputId": "bb788b28-7c9e-4ee4-8795-fe0f12c4ed95"
      },
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import numpy as np\n",
        "\n",
        "pumpkins = pd.read_csv('pump.csv')\n",
        "\n",
        "pumpkins.head()"
      ],
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>City Name</th>\n",
              "      <th>Type</th>\n",
              "      <th>Package</th>\n",
              "      <th>Variety</th>\n",
              "      <th>Sub Variety</th>\n",
              "      <th>Grade</th>\n",
              "      <th>Date</th>\n",
              "      <th>Low Price</th>\n",
              "      <th>High Price</th>\n",
              "      <th>Mostly Low</th>\n",
              "      <th>Mostly High</th>\n",
              "      <th>Origin</th>\n",
              "      <th>Origin District</th>\n",
              "      <th>Item Size</th>\n",
              "      <th>Color</th>\n",
              "      <th>Environment</th>\n",
              "      <th>Unit of Sale</th>\n",
              "      <th>Quality</th>\n",
              "      <th>Condition</th>\n",
              "      <th>Appearance</th>\n",
              "      <th>Storage</th>\n",
              "      <th>Crop</th>\n",
              "      <th>Repack</th>\n",
              "      <th>Trans Mode</th>\n",
              "      <th>Unnamed: 24</th>\n",
              "      <th>Unnamed: 25</th>\n",
              "      <th>Unnamed: 26</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>BALTIMORE</td>\n",
              "      <td>NaN</td>\n",
              "      <td>24 inch bins</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4/29/17</td>\n",
              "      <td>270.0</td>\n",
              "      <td>280.0</td>\n",
              "      <td>270.0</td>\n",
              "      <td>280.0</td>\n",
              "      <td>MARYLAND</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lge</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>E</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>BALTIMORE</td>\n",
              "      <td>NaN</td>\n",
              "      <td>24 inch bins</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>42891</td>\n",
              "      <td>270.0</td>\n",
              "      <td>280.0</td>\n",
              "      <td>270.0</td>\n",
              "      <td>280.0</td>\n",
              "      <td>MARYLAND</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lge</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>E</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>BALTIMORE</td>\n",
              "      <td>NaN</td>\n",
              "      <td>24 inch bins</td>\n",
              "      <td>HOWDEN TYPE</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>9/24/16</td>\n",
              "      <td>160.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>DELAWARE</td>\n",
              "      <td>NaN</td>\n",
              "      <td>med</td>\n",
              "      <td>ORANGE</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>N</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>BALTIMORE</td>\n",
              "      <td>NaN</td>\n",
              "      <td>24 inch bins</td>\n",
              "      <td>HOWDEN TYPE</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>9/24/16</td>\n",
              "      <td>160.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>VIRGINIA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>med</td>\n",
              "      <td>ORANGE</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>N</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>BALTIMORE</td>\n",
              "      <td>NaN</td>\n",
              "      <td>24 inch bins</td>\n",
              "      <td>HOWDEN TYPE</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>42501</td>\n",
              "      <td>90.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>90.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>MARYLAND</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lge</td>\n",
              "      <td>ORANGE</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>N</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   City Name Type       Package  ... Unnamed: 24 Unnamed: 25  Unnamed: 26\n",
              "0  BALTIMORE  NaN  24 inch bins  ...         NaN         NaN          NaN\n",
              "1  BALTIMORE  NaN  24 inch bins  ...         NaN         NaN          NaN\n",
              "2  BALTIMORE  NaN  24 inch bins  ...         NaN         NaN          NaN\n",
              "3  BALTIMORE  NaN  24 inch bins  ...         NaN         NaN          NaN\n",
              "4  BALTIMORE  NaN  24 inch bins  ...         NaN         NaN          NaN\n",
              "\n",
              "[5 rows x 27 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tzurtgU8U59o"
      },
      "source": [
        "from sklearn.preprocessing import LabelEncoder\n",
        "\n",
        "new_columns = ['Color','Origin','Item Size','Variety','City Name','Package']\n",
        "\n",
        "new_pumpkins = pumpkins.drop([c for c in pumpkins.columns if c not in new_columns], axis=1)\n",
        "\n",
        "new_pumpkins.dropna(inplace=True)\n",
        "\n",
        "new_pumpkins = new_pumpkins.apply(LabelEncoder().fit_transform)"
      ],
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fjM82HmFU-tf",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0c1d401c-f1fd-495c-956f-c5395b94b94b"
      },
      "source": [
        "new_pumpkins.info"
      ],
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<bound method DataFrame.info of       City Name  Package  Variety  Origin  Item Size  Color\n",
              "2             1        3        4       3          3      0\n",
              "3             1        3        4      17          3      0\n",
              "4             1        3        4       5          2      0\n",
              "5             1        3        4       5          2      0\n",
              "6             1        4        4       5          3      0\n",
              "...         ...      ...      ...     ...        ...    ...\n",
              "1694         12        3        5       4          6      1\n",
              "1695         12        3        5       4          6      1\n",
              "1696         12        3        5       4          6      1\n",
              "1697         12        3        5       4          6      1\n",
              "1698         12        3        5       4          6      1\n",
              "\n",
              "[991 rows x 6 columns]>"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 892
        },
        "id": "ozP-7W_cX-Ew",
        "outputId": "ae12f8f9-4467-487b-e1ce-fd7c2402e953"
      },
      "source": [
        "import seaborn as sns\n",
        "\n",
        "g = sns.PairGrid(new_pumpkins)\n",
        "g.map(sns.scatterplot)"
      ],
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.PairGrid at 0x7f36dc4a4750>"
            ]
          },
          "metadata": {},
          "execution_count": 18
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1080x1080 with 36 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 380
        },
        "id": "xOACXOb-YHkY",
        "outputId": "17f632f3-650f-412c-bfa3-e97f3d12d82e"
      },
      "source": [
        "sns.swarmplot(x=\"Color\", y=\"Item Size\", data=new_pumpkins)"
      ],
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/seaborn/categorical.py:1296: UserWarning: 80.6% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
            "  warnings.warn(msg, UserWarning)\n",
            "/usr/local/lib/python3.7/dist-packages/seaborn/categorical.py:1296: UserWarning: 37.2% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
            "  warnings.warn(msg, UserWarning)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f36db883190>"
            ]
          },
          "metadata": {},
          "execution_count": 19
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 398
        },
        "id": "pjGnRqR2YXRI",
        "outputId": "f45c1974-d98e-4086-9672-0f6d60381731"
      },
      "source": [
        "sns.catplot(x=\"Color\", y=\"Item Size\",\n",
        "            kind=\"violin\", data=new_pumpkins)"
      ],
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.FacetGrid at 0x7f36db7e1f10>"
            ]
          },
          "metadata": {},
          "execution_count": 20
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 360x360 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "BwCyVF8yY9UG"
      },
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "\n",
        "Selected_features = ['Origin','Item Size','Variety','City Name','Package']\n",
        "\n",
        "X = new_pumpkins[Selected_features]\n",
        "y = new_pumpkins['Color']\n",
        "\n",
        "\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)"
      ],
      "execution_count": 21,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ryYCdSuHZ6ww",
        "outputId": "c2b81357-25da-4018-b9de-8208bdeb85d9"
      },
      "source": [
        "from sklearn.pipeline import Pipeline\n",
        "from sklearn.ensemble import RandomForestClassifier\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "from sklearn.model_selection import GridSearchCV\n",
        "pipe = Pipeline([('classifier' , RandomForestClassifier())])\n",
        "# pipe = Pipeline([('classifier', RandomForestClassifier())])\n",
        "\n",
        "# Create param grid.\n",
        "\n",
        "param_grid = [\n",
        "    {'classifier' : [LogisticRegression()],\n",
        "     'classifier__penalty' : ['l1', 'l2'],\n",
        "    'classifier__C' : np.logspace(-4, 4, 20),\n",
        "    'classifier__solver' : ['liblinear']},\n",
        "    {'classifier' : [RandomForestClassifier()],\n",
        "    'classifier__n_estimators' : list(range(10,101,10)),\n",
        "    'classifier__max_features' : list(range(6,32,5))}\n",
        "]\n",
        "\n",
        "# Create grid search object\n",
        "\n",
        "clf = GridSearchCV(pipe, param_grid = param_grid, cv = 5, verbose=True, n_jobs=-1)\n",
        "\n",
        "# Fit on data\n",
        "\n",
        "best_clf = clf.fit(X_train, y_train)"
      ],
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Fitting 5 folds for each of 100 candidates, totalling 500 fits\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-1)]: Using backend LokyBackend with 2 concurrent workers.\n",
            "[Parallel(n_jobs=-1)]: Done 300 tasks      | elapsed:    7.5s\n",
            "[Parallel(n_jobs=-1)]: Done 500 out of 500 | elapsed:   12.5s finished\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_j0_jBUNa6Rw"
      },
      "source": [
        "model_params= {\n",
        "    'logistic_regression': {\n",
        "        'model': LogisticRegression(multi_class='auto'),\n",
        "        'params': {\n",
        "            'C': [1,5,10],\n",
        "            'solver':['liblinear','lbfgs']\n",
        "        }\n",
        "},\n",
        "      'random_forest': {\n",
        "        'model': RandomForestClassifier(),\n",
        "        'params' : {\n",
        "            'n_estimators': [1,5,10]\n",
        "        }\n",
        "    }\n",
        "}"
      ],
      "execution_count": 30,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sZvakxQ7bu_d"
      },
      "source": [
        "score = []\n",
        "\n",
        "for model_name,mv in model_params.items():\n",
        "    clf = GridSearchCV(mv['model'],mv['params'],cv=5,return_train_score=False)\n",
        "    clf.fit(X_train, y_train)\n",
        "    score.append(\n",
        "    {'model_name': model_name,\n",
        "    'best_score': clf.best_score_,   \n",
        "    'best_params': clf.best_params_ \n",
        "    })\n",
        "    \n",
        "\n",
        "df = pd.DataFrame(score)"
      ],
      "execution_count": 32,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 108
        },
        "id": "F-pfESRRcGNv",
        "outputId": "c66bbac3-cde1-42bf-84dc-7942495d8e32"
      },
      "source": [
        "df"
      ],
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>model_name</th>\n",
              "      <th>best_score</th>\n",
              "      <th>best_params</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>logistic_regression</td>\n",
              "      <td>0.832083</td>\n",
              "      <td>{'C': 1, 'solver': 'liblinear'}</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>random_forest</td>\n",
              "      <td>0.929241</td>\n",
              "      <td>{'n_estimators': 5}</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "            model_name  best_score                      best_params\n",
              "0  logistic_regression    0.832083  {'C': 1, 'solver': 'liblinear'}\n",
              "1        random_forest    0.929241              {'n_estimators': 5}"
            ]
          },
          "metadata": {},
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iRrhcp08ZGP_",
        "outputId": "d361eb92-b81b-434f-88ea-7c931f14fa3a"
      },
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.metrics import accuracy_score, classification_report \n",
        "from sklearn.linear_model import LogisticRegression\n",
        "model = LogisticRegression(solver= 'liblinear', C = 1.0)\n",
        "model.fit(X_train, y_train)\n",
        "predictions = model.predict(X_test)\n",
        "\n",
        "print(classification_report(y_test, predictions))\n",
        "print('Predicted labels: ', predictions)\n",
        "print('Accuracy: ', accuracy_score(y_test, predictions))"
      ],
      "execution_count": 47,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.83      0.98      0.90       166\n",
            "           1       0.00      0.00      0.00        33\n",
            "\n",
            "    accuracy                           0.81       199\n",
            "   macro avg       0.42      0.49      0.45       199\n",
            "weighted avg       0.69      0.81      0.75       199\n",
            "\n",
            "Predicted labels:  [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0\n",
            " 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n",
            " 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n",
            " 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0\n",
            " 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n",
            " 0 0 0 0 0 1 0 0 0 0 0 0 0 0]\n",
            "Accuracy:  0.8140703517587939\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ig1Lt-YxcRf2",
        "outputId": "a8e963d4-8994-4fb3-fe90-ab291fdb2113"
      },
      "source": [
        "from sklearn.metrics import confusion_matrix\n",
        "confusion_matrix(y_test, predictions)"
      ],
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[162,   4],\n",
              "       [ 33,   0]])"
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 366
        },
        "id": "I52UQMCNcgMY",
        "outputId": "84881088-71db-4f8c-cca4-5beeec22c9c7"
      },
      "source": [
        "from sklearn.metrics import roc_curve, roc_auc_score\n",
        "\n",
        "y_scores = model.predict_proba(X_test)\n",
        "# calculate ROC curve\n",
        "fpr, tpr, thresholds = roc_curve(y_test, y_scores[:,1])\n",
        "sns.lineplot([0, 1], [0, 1])\n",
        "sns.lineplot(fpr, tpr)"
      ],
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
            "  FutureWarning\n",
            "/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
            "  FutureWarning\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f36d426b750>"
            ]
          },
          "metadata": {},
          "execution_count": 37
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vzoouZHncjF7",
        "outputId": "4ce14dca-3306-458a-c4fd-1322f82d5992"
      },
      "source": [
        "auc = roc_auc_score(y_test,y_scores[:,1])\n",
        "print(auc)"
      ],
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.6997079225994889\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2RIw6vizcvzf"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}